#!/bin/bash
#
# Mount Android ftp server
#

# Validate IP address format
validate_ip() {
  local ip=$1
  local regex='^([0-9]{1,3}\.){3}[0-9]{1,3}$'
  if [[ $ip =~ $regex ]]; then
    IFS='.' read -r -a octets <<< "$ip"
    for octet in "${octets[@]}"; do
      if ((octet < 0 || octet > 255)); then
        return 1
      fi
    done
    return 0
  else
    return 1
  fi
}

# Check if required commands are available
if ! command -v nc &> /dev/null || ! command -v gio &> /dev/null; then
  echo "Error: Required commands 'nc' or 'gio' are not available"
  echo "Please install them using `sudo apt install netcat gio`"
  exit 1
fi

# use credentials from
. ~/.credentials-android

# Check if required variables are set
if [[ -z "$USER" || -z "$PASS" || -z "$HOST" ]]; then
  echo "Error: Missing required credentials in ~/.credentials-android"
  exit 1
fi

usrname=`whoami`
dst_year=`date '+%Y'`
dst_date=`date '+%m-%d_%H-%M'`
dst_dir="/home/$usrname/Downloads/$dst_year/$dst_date"

# check if cached host IP is still valid
if nc -z -w1 $HOST $PORT; then
  echo "Using cached IP= $HOST"
else
  # read the Android host IP address from user input
  # use infinite loop to ensure valid IP address is read:
  while true; do
    read -p "Enter Android ftp server IP: " HOST
    if validate_ip "$HOST"; then
      break
    else
      echo "Error: Invalid IP address format. Please try again."
    fi
  done
fi

FTPURL="ftp://$USER@$HOST:$PORT"

if nc -z -w1 $HOST $PORT; then
    echo $PASS | gio mount $FTPURL >/dev/null 2>&1

    sleep 2
    # Update ~/.credentials-android with the current host IP directly
    sed -i "s/^HOST=.*/HOST=$HOST/" ~/.credentials-android

    runtime_dir=${XDG_RUNTIME_DIR:-"/run/user/$(id -u)"}
    echo "Android FTP mounted at $runtime_dir/gvfs/ftp:host=$HOST,port=$PORT,user=$USER"
else
  echo
  echo "No Android ftp detected!"
  echo
  exit 1
fi

exit 0

